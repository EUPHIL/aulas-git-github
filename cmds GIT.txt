ls : abre toda a "pasta"

cd Deskttop : Muda o diretorio para a Area de Trabalho

pwd: Mostra oo caminho (EX: /c/Users/Philipe/Desktop)

'.' e '..' : Sao arquivos ocultos 
'..' : Eh a pasta anterior a atua
'.': Eh a propia pasta atual
ls -a : Mostra os arquivos ocultos 

mkdir : cria uma nova pasta (EX: mkdir aula_git)

cat "nome do arquivo" : Acessa o conteudo do arquivo

git init . : Inicializa um repositorio GIT naquela pasta 
rm : remove o arquivo do diretorio
rm -rf .git : remove de forma recurssiva e forcada todos diretorios 

->-> COMANDOS GIT <-<- 
get status : Traz as informacoes daquela pasta repositorio

get add 'nome arquivo': ajuda a adicionar o que eu quero ao commit, ou seja, 
torna 'trackeavel' algum arquuivo.


//cada commit precisa de um prop / responsavel com email e nome 
git config --global user.email "email@.com" : adiciona um email
git config --global user.name "nome" : adiciona um nome

para verificar se foi add { 
	git config --global user.email 
	git config --global user.name 
}


git commi -m "nome/descricao" : cria uma commit / confirma a criacao
ex : [main (root-commit) e9a4bae(eh o id unico da commit)] 
primeiros comandos


nano "nome qualquer.txt" : para abrir o editor de texto do GIT BASH
	{ Para salvar: CTRL+o
	{ Para sair: CTRL+x 


git log: Para verificar as commits 


